sensitivity.analysis.server.AnalyzingResults = Analyzing results
sensitivity.analysis.server.ApplyGeneratorCapping = Capping generator ${generatorId} using capping value ${cappingValue} : targetP ${oldTargetP} --> ${newTargetP}
sensitivity.analysis.server.ApplyStageGeneratorTargetP = Generator ${generatorId} targetP modification : ${oldTargetP} --> ${newTargetP}
sensitivity.analysis.server.BadGeneratorEnergySource = Generator ${generatorId} is not of the required energy source : ${energySource}
sensitivity.analysis.server.GeneratorsVariationForMonitoredBranch = Generator variation found for monitored branch ${branchId} : ${variation}
sensitivity.analysis.server.MaxVariationForMonitoredBranchToConsider = The maximum variation has been found for monitored branch ${branchId}
sensitivity.analysis.server.MonitoredBranchConstraintDeltaFound = Constraint found for monitored branch ${branchId} : value of intensity to reduce = ${delta}
sensitivity.analysis.server.MonitoredBranchLimitValueToConsider = ${contingency} : ${limitName} limit value to consider on side ${side} for monitored branch ${branchId} = ${limitValue} to compare with I = ${intensity}
sensitivity.analysis.server.MonitoredBranchNoConstraint = No constraint found for monitored branch ${branchId}
sensitivity.analysis.server.NonEvacuatedEnergyInputParametersTranslationFailure = Failure while building inputs, exception : ${exception}
sensitivity.analysis.server.NonEvacuatedEnergyLoadFlowDcNotAllowed = Loadflow in DC mode not allowed !!
sensitivity.analysis.server.Stage = Stage (${stageName})
sensitivity.analysis.server.badEquipmentType = Equipments type in filter with name=${name} should be ${expectedType} : filter is ignored
sensitivity.analysis.server.badMonitoredEquipmentType = Monitored equipments type in filter with name=${name} should be ${expectedType} : filter is ignored
sensitivity.analysis.server.contingencyTranslationFailure = Could not get contingencies from contingencyListIdent ${name} : not found
sensitivity.analysis.server.distributionTypeAllowedOnlyForManualContainer = Distribution type ${distributionType} is allowed only for manual filter : filter is ignored
sensitivity.analysis.server.distributionTypeNotAllowedForLoadsContainer = Distribution type ${distributionType} is not allowed for loads filter : filter is ignored
sensitivity.analysis.server.filterTranslationFailure = Could not get identifiables from filter ${name} : ${exception}
sensitivity.analysis.server.monitoredBranchNoCurrentLimits = No current limits for the monitored branch ${id}
sensitivity.analysis.server.monitoredBranchNoCurrentOrPermanentLimitsOnSide = No permanent limit for the monitored branch ${id} on side ${side}
sensitivity.analysis.server.monitoredBranchNoPermanentLimits = No permanent limits for the monitored branch ${id}
sensitivity.analysis.server.monitoredBranchNotFound = Could not find the monitored branch ${id}
sensitivity.analysis.server.monitoredBranchTemporaryLimitNotFound = Temporary limit ${limitName} not found for the monitored branch ${id}
sensitivity.analysis.server.reportType = ${reportType} (${providerToUse})
sensitivity.analysis.server.rootReporterId = ${rootReporterId}
sensitivity.analysis.server.sensitivityInputParametersTranslationFailure = Failure while building inputs, exception : ${exception}
sensitivity.analysis.server.sensitivityNodesComputationNotSupported = Sensitivity nodes computation is only supported with OpenLoadFlow : computation ignored
sensitivity.analysis.server.sensitivityNonEvacuatedEnergyFailure = Failure while running non evacuated energy computation exception : ${exception}
